Typing[4007] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4007
   --> vendor/facebook/fbexpect/src/utils.hack
 23 |     /* HH_IGNORE_ERROR[4007] sketchy array cast */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4007] (array) cast forbidden; arrays with unspecified key and value types are not allowed
   --> vendor/facebook/fbexpect/src/utils.hack
 24 |     return (array) $value;
    |            ^^^^^^^^^^^^^^

NastCheck[3084] PHP style anonymous functions are not allowed.
   --> vendor/facebook/hack-router-codegen/src/Codegen.hack
230 |       function (classname<HasUriPattern> $class) {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4281
   --> vendor/facebook/xhp-lib/src/core/XHP.php
102 |     /* HH_FIXME[4281] stringish migration */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] Cannot cast a value of type XHPChild to string.
Only primitives may be used in a (string) cast.
If you are trying to cast a Stringish type, please use `stringish_cast`.
This functionality is being removed from HHVM.
   --> vendor/facebook/xhp-lib/src/core/XHP.php
103 |     return htmlspecialchars((string)$child);
    |                             ^^^^^^^^^^^^^^

Typing[4009] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4009
   --> vendor/hhvm/hacktest/src/Framework/HackTest.hack
113 |             /* HH_IGNORE_ERROR[4009] this is unsafe */
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4009] This call is invalid, this is not a function, it is a string
   --> vendor/hhvm/hacktest/src/Framework/HackTest.hack
114 |             $tuples = $provider();
    |                       ^^^^^^^^^^^

Typing[4007] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4007
   --> vendor/hhvm/hacktest/src/Retriever/ClassRetriever.hack
 60 |       /* HH_FIXME[4007] need a PHP array here for now */
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4007] (array) cast forbidden; arrays with unspecified key and value types are not allowed
   --> vendor/hhvm/hacktest/src/Retriever/ClassRetriever.hack
 61 |       (array) $paths,
    |       ^^^^^^^^^^^^^^

Typing[4223] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4223
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
373 |     /* HH_IGNORE_ERROR[4223] Only allowed in partial mode. */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4223] Cannot use ... without a parameter name in strict mode. Please add a parameter name.
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
374 |     (...) ==> null;
    |     ^^^^^^^^^^^^^^

Typing[4007] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4007
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/DictLikeArraySpec.hack
 45 |       |> /* HH_IGNORE_ERROR[4007] PHP array cast */ (array)$$;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4007] (array) cast forbidden; arrays with unspecified key and value types are not allowed
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/DictLikeArraySpec.hack
 45 |       |> /* HH_IGNORE_ERROR[4007] PHP array cast */ (array)$$;
    |                                                     ^^^^^^^^^

Typing[4007] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4007
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/DictLikeArraySpec.hack
 66 |       |> /* HH_IGNORE_ERROR[4007] PHP array cast */ (array)$$;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4007] (array) cast forbidden; arrays with unspecified key and value types are not allowed
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/DictLikeArraySpec.hack
 66 |       |> /* HH_IGNORE_ERROR[4007] PHP array cast */ (array)$$;
    |                                                     ^^^^^^^^^

Typing[4281] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4281
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/FloatSpec.hack
 30 |       /* HH_FIXME[4281] Stringish is going */
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] Cannot cast a value of type Stringish to string.
Only primitives may be used in a (string) cast.
If you are trying to cast a Stringish type, please use `stringish_cast`.
This functionality is being removed from HHVM.
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/FloatSpec.hack
 31 |       $str = (string)$value;
    |              ^^^^^^^^^^^^^^

Typing[4281] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4281
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/IntSpec.hack
 24 |       /* HH_FIXME[4281] Stringish is going */
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] Cannot cast a value of type Stringish to string.
Only primitives may be used in a (string) cast.
If you are trying to cast a Stringish type, please use `stringish_cast`.
This functionality is being removed from HHVM.
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/IntSpec.hack
 25 |       $str = (string)$value;
    |              ^^^^^^^^^^^^^^

Typing[4281] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4281
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/StringSpec.hack
 23 |       /* HH_FIXME[4281] Stringish is going */
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] Cannot cast a value of type Stringish to string.
Only primitives may be used in a (string) cast.
If you are trying to cast a Stringish type, please use `stringish_cast`.
This functionality is being removed from HHVM.
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/StringSpec.hack
 24 |       return (string)$value;
    |              ^^^^^^^^^^^^^^

Typing[4007] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4007
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/TupleSpec.hack
 82 |     /* HH_IGNORE_ERROR[4007] */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4007] (array) cast forbidden; arrays with unspecified key and value types are not allowed
   --> vendor/hhvm/type-assert/src/TypeSpec/__Private/TupleSpec.hack
 83 |     return (array)$tuple;
    |            ^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_connect
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 15 | 			$this->connection = mysql_connect(
    |                        ^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_connect (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 15 | 			$this->connection = mysql_connect(
    |                        ^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 16 | 				sprintf('%s:%d', $this->config->getHost(), $this->config->getPort()),
    |     ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 16 | 				sprintf('%s:%d', $this->config->getHost(), $this->config->getPort()),
    |     ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_select_db
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 20 | 			if (false === mysql_select_db($this->config->getName(), $this->connection)) {
    |                  ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_select_db (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 20 | 			if (false === mysql_select_db($this->config->getName(), $this->connection)) {
    |                  ^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 22 | 					sprintf('Database %s does not exist', $this->config->getName())
    |      ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 22 | 					sprintf('Database %s does not exist', $this->config->getName())
    |      ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\is_resource
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\is_resource (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^

Typing[4110] Invalid return type
   --> vendor/usox/hadb/src/DatabaseMySql.hh
  6 | 	private ?resource $connection;
    |          ^^^^^^^^^ But got ?resource
 13 | 	public function getConnection(): resource {
    |                                   ^^^^^^^^ Expected resource
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ All the local information about $this->connection has been invalidated during this call.
This is a limitation of the type-checker, use a local if that's the problem.
 27 | 			return $this->connection;
    |           ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 30 | 			sprintf('Connection to host %s failed', $this->config->getHost())
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 30 | 			sprintf('Connection to host %s failed', $this->config->getHost())
    |    ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_query
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 41 | 		$result = mysql_query($query, $this->getConnection());
    |             ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_query (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 41 | 		$result = mysql_query($query, $this->getConnection());
    |             ^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\is_resource
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 42 | 		if (is_resource($result)) {
    |       ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\is_resource (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 42 | 		if (is_resource($result)) {
    |       ^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 46 | 			sprintf('Query failed: %s', $query)
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 46 | 			sprintf('Query failed: %s', $query)
    |    ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_fetch_assoc
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 63 | 		$result = mysql_fetch_assoc($resource);
    |             ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_fetch_assoc (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 63 | 		$result = mysql_fetch_assoc($resource);
    |             ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_real_escape_string
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 71 | 		return mysql_real_escape_string($string, $this->getConnection());
    |          ^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_real_escape_string (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 71 | 		return mysql_real_escape_string($string, $this->getConnection());
    |          ^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_num_rows
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 75 | 		return mysql_num_rows($this->query($query)) > 0;
    |          ^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_num_rows (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 75 | 		return mysql_num_rows($this->query($query)) > 0;
    |          ^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_result
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 79 | 		return (int) mysql_result($this->query($query), 0, 'count');
    |                ^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_result (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 79 | 		return (int) mysql_result($this->query($query), 0, 'count');
    |                ^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\mysql_insert_id
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 83 | 		return (int) mysql_insert_id($this->getConnection());
    |                ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\mysql_insert_id (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 83 | 		return (int) mysql_insert_id($this->getConnection());
    |                ^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 88 | 			sprintf('TRUNCATE TABLE %s', $table_name)
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabaseMySql.hh
 88 | 			sprintf('TRUNCATE TABLE %s', $table_name)
    |    ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_connect
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 15 | 			$this->connection = pg_connect(
    |                        ^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_connect (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 15 | 			$this->connection = pg_connect(
    |                        ^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 16 | 				sprintf(
    |     ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 16 | 				sprintf(
    |     ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\is_resource
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\is_resource (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^

Typing[4110] Invalid return type
   --> vendor/usox/hadb/src/DatabasePostgres.hh
  6 | 	private ?resource $connection;
    |          ^^^^^^^^^ But got ?resource
 13 | 	public function getConnection(): resource {
    |                                   ^^^^^^^^ Expected resource
 26 | 		if (is_resource($this->connection)) {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ All the local information about $this->connection has been invalidated during this call.
This is a limitation of the type-checker, use a local if that's the problem.
 27 | 			return $this->connection;
    |           ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 30 | 			sprintf('Connection to host %s failed', $this->config->getHost())
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 30 | 			sprintf('Connection to host %s failed', $this->config->getHost())
    |    ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_query
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 41 | 		$result = pg_query($this->getConnection(), $query);
    |             ^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_query (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 41 | 		$result = pg_query($this->getConnection(), $query);
    |             ^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\is_resource
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 43 | 		if (is_resource($result)) {
    |       ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\is_resource (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 43 | 		if (is_resource($result)) {
    |       ^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 47 | 			sprintf('Query failed: %s', $query)
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 47 | 			sprintf('Query failed: %s', $query)
    |    ^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_fetch_assoc
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 64 | 		$result = pg_fetch_assoc($pgsql_resource);
    |             ^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_fetch_assoc (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 64 | 		$result = pg_fetch_assoc($pgsql_resource);
    |             ^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_escape_string
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 72 | 		return pg_escape_string($this->getConnection(), $string);
    |          ^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_escape_string (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 72 | 		return pg_escape_string($this->getConnection(), $string);
    |          ^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_num_rows
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 76 | 		return pg_num_rows($this->query($query)) > 0;
    |          ^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_num_rows (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 76 | 		return pg_num_rows($this->query($query)) > 0;
    |          ^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_fetch_result
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 80 |                 return (int) pg_fetch_result($this->query($query), 0, 'count');
    |                              ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_fetch_result (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 80 |                 return (int) pg_fetch_result($this->query($query), 0, 'count');
    |                              ^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\pg_fetch_result
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 84 | 		return (int) pg_fetch_result($this->query('SELECT LASTVAL()'), 0, 'lastval');
    |                ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\pg_fetch_result (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 84 | 		return (int) pg_fetch_result($this->query('SELECT LASTVAL()'), 0, 'lastval');
    |                ^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): Usox\HaDb\sprintf
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 89 | 			sprintf('TRUNCATE TABLE %s', $table_name)
    |    ^^^^^^^

Naming[2049] Unbound name: Usox\HaDb\sprintf (a global function)
   --> vendor/usox/hadb/src/DatabasePostgres.hh
 89 | 			sprintf('TRUNCATE TABLE %s', $table_name)
    |    ^^^^^^^

Parsing[1002] Toplevel statements are not allowed. Use __EntryPoint attribute instead
   --> vendor/usox/sharesta/example/webroot/index.hh
  4 | require_once '../../vendor/hh_autoload.hh';
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2083] Array literals are no longer legal; use varray or darray instead
   --> vendor/usox/sharesta/src/RequestBody.hh
 28 | 			return dict([]);
    |                ^^

Parsing[1002] The error suppression operator @ is not allowed
   --> vendor/usox/sharesta/src/Response.hh
 39 | 			@\header($header);
    |    ^

Naming[2083] Array literals are no longer legal; use varray or darray instead
   --> vendor/usox/sharesta/src/Router.hh
 78 | 		$route_parameters = dict([]);
    |                            ^^

Naming[2083] Array literals are no longer legal; use varray or darray instead
   --> vendor/usox/sharesta/src/Router.hh
 95 | 			$uri_params = [];
    |                  ^^

86 errors found.
